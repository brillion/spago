syntax = "proto3";

package bart.grpcapi;

option go_package = "github.com/nlpodyssey/spago/pkg/nlp/transformers/bart/grpcapi";

// The BART service definition.
service BART {
  // Sends a request to classify.
  rpc Classify(ClassifyRequest) returns (ClassifyReply) {}
  // Sends a request to classify-nli.
  rpc ClassifyNLI(ClassifyNLIRequest) returns (ClassifyReply) {}
  // Send a request to generate.
  rpc Generate(GenerateRequest) returns (GenerateReply) {}
}

// The classify request message containing the text to classify
message ClassifyRequest {
  bool has_text2 = 1;  // always set this to "true" when using text2
  string text = 2;
  string text2 = 3;
}

// The classify-nli request message containing the text to classify using natural language inference
message ClassifyNLIRequest {
  string text = 1;
  string hypothesis_template = 2;
  repeated string possible_labels = 3;
  bool multi_class = 4;
}

// The pair of class and confidence.
message ClassConfidencePair {
  string class = 1;
  double confidence = 2;
}

// The response message containing the classification.
message ClassifyReply {
  string class = 1;
  double confidence = 2;
  repeated ClassConfidencePair distribution = 3;

  // Took is the number of milliseconds it took the server to execute the request.
  int64 took = 4;
}

// The generate request message containing the text from which to start the conditional generation
message GenerateRequest {
  string text = 2;
}

// The response message containing the generated text.
message GenerateReply {
  string text = 1;

  // Took is the number of milliseconds it took the server to execute the request.
  int64 took = 4;
}